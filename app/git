#!/usr/bin/env python3
import os
import sys
import zlib
import hashlib

cwd = os.getcwd()
# print("ARGV", sys.argv, len(sys.argv))

if len(sys.argv) == 1:
    print("hello world", cwd)
    exit(0)

command = sys.argv[1]

# init git repo
if command == "init":
    os.mkdir(".git")
    os.mkdir(".git/objects")
    os.mkdir(".git/refs")
    with open(".git/HEAD", "w") as f:
        f.write("ref: refs/heads/main\n")

    print("Initialized git directory")

# decode blob object
elif command == "cat-file" and sys.argv[2] == "-p":
    blob_sha = sys.argv[3]
    with open(f".git/objects/{blob_sha[:2]}/{blob_sha[2:]}", "rb") as f:
        raw = zlib.decompress(f.read())
        head, content = raw.split(b"\0")
        print(content.decode())

# encode/check blob object
elif command == "hash-object":
    filename = None
    must_write_object = False

    if len(sys.argv) == 4:
        must_write_object = sys.argv[2] == "-w"
        filename = sys.argv[3]
    else:
        filename = sys.argv[2]

    ## hash object
    blob_sha = None
    payload = None
    with open(filename, "rb") as f:
        content = f.read()
        header = f"blob {len(content)}\x00"
        payload = header.encode("ascii") + content
        blob_sha = hashlib.sha1(payload).hexdigest()
        print(blob_sha)

    ## write object
    if must_write_object:
        os.mkdir(f".git/objects/{blob_sha[:2]}")
        with open(f".git/objects/{blob_sha[:2]}/{blob_sha[2:]}", "wb") as f:
            f.write(zlib.compress(payload))
